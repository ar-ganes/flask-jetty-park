"""Initial migration

Revision ID: bb95b85c9739
Revises: 
Create Date: 2024-12-30 12:49:24.445356

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb95b85c9739'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blacklist_entries', schema=None) as batch_op:
        batch_op.drop_constraint('fk_blacklist_entries_vehicle_id', type_='foreignkey')  # Replace 'fk_blacklist_entries_vehicle_id' with the actual name
        batch_op.drop_column('vehicle_id')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_companies_name'), ['name'])

    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_vehicles_license_plate'), ['license_plate'])

    with op.batch_alter_table('whitelist_entries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('license_plate', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('make_model', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('individual_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('effective_start_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('effective_end_date', sa.Date(), nullable=True))
        batch_op.alter_column('company_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_whitelist_entries_company_id_companies'), 'companies', ['company_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('vehicle_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('whitelist_entries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('vehicle_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_whitelist_entries_company_id_companies'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'vehicles', ['vehicle_id'], ['id'])
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.alter_column('company_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('effective_end_date')
        batch_op.drop_column('effective_start_date')
        batch_op.drop_column('individual_name')
        batch_op.drop_column('make_model')
        batch_op.drop_column('license_plate')

    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_vehicles_license_plate'), type_='unique')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_companies_name'), type_='unique')

    with op.batch_alter_table('blacklist_entries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('vehicle_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(None, 'vehicles', ['vehicle_id'], ['id'])

    # ### end Alembic commands ###
